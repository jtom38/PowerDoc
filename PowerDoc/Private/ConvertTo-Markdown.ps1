function ConvertTo-Markdown {
    param (
        # Class Param
        [string] $FileName,
        [string] $ClassName,
        [string[]] $Constructors,
        [string[]] $Properties,
        [string[]] $Methods

        # Function Param

    )
    
    Process {

        if ([System.String]::IsNullOrEmpty($ClassName) -eq $false -and
            [System.String]::IsNullOrEmpty($FileName) -eq $false -and
            [System.String]::IsNullOrEmpty($Constructors) -eq $false -and 
            [System.String]::IsNullOrEmpty($Properties) -eq $false -and
            [System.String]::IsNullOrEmpty($Methods) -eq $false ) {

            $dt = [datetime]::Now.ToShortDateString()
            [string[]] $Template = @(
                '# {ClassName}',
                '',
                '## Constructors',
                '',
                '```PowerShell',
                '{Constructors}',
                '```',
                '',
                '## Properties',
                '',                
                '```PowerShell',
                '{Properties}',
                '```',
                '',
                '## Methods',
                '',
                '```PowerShell',
                '{Methods}',
                '```',
                '',
                "Generated by [PowerDoc](https://github.com/luther38/PowerDoc) @ $($dt)"

            )
            
            $Template[0] = $Template[0].Replace('{ClassName}', $ClassName)
            $Template[5] = $Template[5].Replace('{Constructors}', $Constructors)
            $Template[11] = $Template[11].Replace('{Properties}', $Properties)
            $Template[17] = $Template[17].Replace('{Methods}', $Methods)
            
            # Generate Markdown file
            $name = "$($ClassName).md"
            $path = "$($Global:PowerDoc.PathOutput)\"
            New-Item -Name $name -Path $path | Out-Null

            $export = "$($path)$($name)"
            foreach($line in $Template){
                Add-Content -Path $export -Value $line
            }

            Write-Host ""

        }

    }

}